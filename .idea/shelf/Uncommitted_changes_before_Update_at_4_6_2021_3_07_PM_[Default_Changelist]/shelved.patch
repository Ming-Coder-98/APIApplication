Index: config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"key\": \"WB9YusKNEEwYwpXuv0Bx5yuGzPIhXTBnMevAumwtcQ4=\",\r\n    \"certPath\": \"/Users/User/KeyAndCert/CorpPass/cert.pem\",\r\n    \"keyPath\": \"/Users/User/KeyAndCert/CorpPass/key.pem\",\r\n    \"IV\": \"SSGAPIInitVector\",\r\n    \"StatusCode\": 200,\r\n    \"UEN\": \"199900650G\",\r\n    \"CourseRefNum\": \"TGS-2020001874\",\r\n    \"ExtCourseRefNum\": \"TGS-2020001874\",\r\n    \"runId\": 223996,\r\n    \"enrollRefNum\": \"\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config.json b/config.json
--- a/config.json	(revision c8051f7f9391b54a51e52492d740e82fcb4ff0cb)
+++ b/config.json	(date 1622779445532)
@@ -7,6 +7,6 @@
     "UEN": "199900650G",
     "CourseRefNum": "TGS-2020001874",
     "ExtCourseRefNum": "TGS-2020001874",
-    "runId": 223996,
+    "runId": 223954,
     "enrollRefNum": ""
 }
\ No newline at end of file
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Import course Run py Functions\r\nfrom CourseRunFunctions import *\r\n\r\nimport tkinter as tk\r\nfrom tkinter import *\r\nfrom tkinter import ttk\r\nfrom tkinter import simpledialog\r\nfrom tkinter import messagebox\r\nimport json\r\nimport datetime\r\nfrom PIL import ImageTk, Image\r\nfrom tkinter import filedialog\r\nimport pandas as pd\r\n\r\n\r\n# Quit Program\r\ndef quit_program():\r\n    quit()\r\n\r\n\r\nclass APIProject(tk.Tk):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        tk.Tk.__init__(self, *args, *kwargs)\r\n        container = tk.Frame(self)\r\n\r\n        container.pack(side=\"top\", fill=\"both\", expand=True)\r\n\r\n        container.grid_rowconfigure(0, weight=1)\r\n        container.grid_columnconfigure(0, weight=1)\r\n\r\n        self.frames = {}\r\n\r\n        for F in (StartPage, PageOne, PageTwo, PageThree, PageFour):\r\n            frame = F(container, self)\r\n\r\n            self.frames[F] = frame\r\n\r\n            frame.grid(row=0, column=0, sticky=\"nsew\")\r\n\r\n        self.show_frame(StartPage)\r\n\r\n    def show_frame(self, cont):\r\n        frame = self.frames[cont]\r\n        frame.tkraise()\r\n\r\n\r\n# Starting Page (Press to start the Navigation/ Exit)\r\n# 2 options for the user to choose from\r\nclass StartPage(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        load = Image.open(\"SKFMenuPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        button1 = tk.Button(self, text=\"Press to start the Navigation\", bg=\"white\", width=25, pady=5,\r\n                            command=lambda: controller.show_frame(PageOne))  # go to Page One\r\n        button1.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n        button2 = tk.Button(self, text=\"Exit\", bg=\"white\", width=25, pady=5,\r\n                            command=quit_program)  # quit program\r\n        button2.place(relx=0.5, rely=0.7, anchor=CENTER)\r\n\r\n\r\n# Add course run into API\r\nclass PageOne(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n\r\n        #load initialization method from courseRunFunctions.py  \r\n        courseRunInitialization()      \r\n        \r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label2 = tk.Label(self, text=\"You are about to add a course run\")\r\n        label2.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n\r\n        def AddCourse():  \r\n            try:\r\n                addCourserun()\r\n                messagebox.showinfo(\"Successful\", \"Added Course into API \\n Status Code: 200\")\r\n            except:\r\n                messagebox.showerror(\"Invalid Response\", \"Unable to add as Course Run has already been added. \\n Status Code: 400 \", )\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/CourseRunPayLoad.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewJsonFile():\r\n            json_filename = 'CourseRunPayLoad.json'\r\n            Interface = Tk()\r\n\r\n            with open(json_filename, 'r') as inside:\r\n                data = json.load(inside)\r\n\r\n            text = Text(Interface, state='normal', height=20, width=50)\r\n            text.place(x=20, y=40)\r\n            text.insert('1.0', str(data))\r\n\r\n            Interface.geometry(\"450x200\")\r\n\r\n            Interface.mainloop()\r\n\r\n        # When button is pressed, function should be called\r\n        AddButton = tk.Button(self, command=AddCourse, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageTwo))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download course run in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewJsonButton = tk.Button(self, text=\"View course run in json\", width=18, pady=5, bg=\"white\",\r\n                               command=ViewJsonFile)\r\n        ViewJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add enrollment into API\r\nclass PageTwo(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label2 = tk.Label(self, text=\"You are about to add an enrollment\")\r\n        label2.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n\r\n        def AddEnrollment():\r\n            messagebox.showinfo(\"Successful\", \"Added Enrollment into API\")\r\n\r\n        def DownloadFile():\r\n            global read_file\r\n\r\n            export_file_path = filedialog.asksaveasfilename(defaultextension='.csv')\r\n            read_file.to_csv(export_file_path, index=None, header=True)\r\n            messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n\r\n        # When button is pressed, function is called\r\n        AddButton = tk.Button(self, command=AddEnrollment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageThree))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"View enrollment in CSV\", width=18, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n\r\n\r\n# Add attendance into API\r\nclass PageThree(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label2 = tk.Label(self, text=\"You are about to add an attendance\")\r\n        label2.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n\r\n        def AddAttendance():\r\n            messagebox.showinfo(\"Successful\", \"Added Attendance into API\")\r\n\r\n        def DownloadFile():\r\n            messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n\r\n        # When button is pressed, function is called\r\n        AddButton = tk.Button(self, command=AddAttendance, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageFour))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"View attendance in CSV\", width=18, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n\r\n\r\n# Add assessment into API\r\nclass PageFour(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label2 = tk.Label(self, text=\"You are about to add an assessment\")\r\n        label2.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n\r\n        def AddAssessment():\r\n            messagebox.showinfo(\"Successful\", \"Added Assessment into API\")\r\n\r\n        def DownloadFile():\r\n            messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n\r\n        # When button is pressed, function is called\r\n        AddButton = tk.Button(self, command=AddAssessment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageTwo))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"View assessment in CSV\", width=18, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n\r\n\r\n\r\napp = APIProject()\r\napp.geometry(\"500x747\")\r\napp.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision c8051f7f9391b54a51e52492d740e82fcb4ff0cb)
+++ b/main.py	(date 1622789360623)
@@ -1,5 +1,5 @@
 #Import course Run py Functions
-from CourseRunFunctions import *
+from courseRunFunctions import *
 
 import tkinter as tk
 from tkinter import *
@@ -12,6 +12,17 @@
 from tkinter import filedialog
 import pandas as pd
 
+# Open the json file where the "courserun info" is being stored
+with open("CourseRunPayLoad.json") as f:
+    # Load the json file data into local variable "data"
+    data = json.load(f)
+# Store the list of data into local variable "courseTPinfo & courseRuninfo"
+courseTPinfo = data["course"]
+courseRuninfo = data["course"]["runs"]
+courseTPUEN = courseTPinfo["trainingProvider"]["uen"]
+courseRefNumber = courseTPinfo["courseReferenceNumber"]
+courseAdminEmail = courseRuninfo[0]["courseAdminEmail"]
+
 
 # Quit Program
 def quit_program():
@@ -89,8 +100,15 @@
         img2.image = render
         img2.place(x=0, y=0, relwidth=1, relheight=1)
 
-        label2 = tk.Label(self, text="You are about to add a course run")
-        label2.place(relx=0.5, rely=0.15, anchor=CENTER)
+        label1 = tk.Label(self, text="You are about to add a Course Run to the course below: ")
+        label1.place(relx=0.5, rely=0.15, anchor=CENTER)
+        label2 = tk.Label(self, text="Course Reference Number: " + courseRefNumber)
+        label2.place(relx=0.5, rely=0.2, anchor=CENTER)
+        label3 = tk.Label(self, text="Training Provider UEN: " + courseTPUEN)
+        label3.place(relx=0.5, rely=0.25, anchor=CENTER)
+        label4 = tk.Label(self, text="Course Admin Email: " + courseAdminEmail)
+        label4.place(relx=0.5, rely=0.3, anchor=CENTER)
+
 
         def AddCourse():  
             try:
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"334dd218-34f3-4180-b43b-f82e69c63fb1\" name=\"Default Changelist\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/.gitignore\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/config.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/config.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/courseRunFunctions.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/courseRunFunctions.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tODss4tIl7gVtpmijq9oc5zv8L\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"334dd218-34f3-4180-b43b-f82e69c63fb1\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1622631451536</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1622631451536</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c8051f7f9391b54a51e52492d740e82fcb4ff0cb)
+++ b/.idea/workspace.xml	(date 1622782774984)
@@ -2,10 +2,8 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="334dd218-34f3-4180-b43b-f82e69c63fb1" name="Default Changelist" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/config.json" beforeDir="false" afterPath="$PROJECT_DIR$/config.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/courseRunFunctions.py" beforeDir="false" afterPath="$PROJECT_DIR$/courseRunFunctions.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -24,7 +22,8 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
-    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
+    <property name="last_opened_file_path" value="$USER_HOME$/PycharmProjects/APITest" />
+    <property name="restartRequiresConfirmation" value="false" />
   </component>
   <component name="RunManager">
     <configuration name="main" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
