Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Import course Run py Functions\r\n\r\nfrom AssessmentFunction import addAssessment\r\nfrom EnrolmentFunction import addEnrolment, enrollmentInitialization\r\nfrom AttendanceFunction import uploadAttendance\r\nfrom courseRunFunctions import *\r\n\r\nimport tkinter as tk\r\nfrom tkinter import *\r\nfrom tkinter import ttk\r\nfrom tkinter import simpledialog\r\nfrom tkinter import messagebox\r\nimport json\r\nimport datetime\r\nfrom PIL import ImageTk, Image\r\nfrom tkinter import filedialog\r\nimport pandas as pd\r\nimport pyjsonviewer\r\n\r\n\r\n# Open the json file where the \"courserun info\" is being stored\r\nwith open(\"CourseRunPayLoad.json\") as f:\r\n    # Load the json file data into local variable \"data\"\r\n    data = json.load(f)\r\n# Store the list of data into local variable \"courseTPinfo & courseRuninfo\"\r\ncourseTPinfo = data[\"course\"]\r\ncourseRuninfo = data[\"course\"][\"runs\"]\r\ncourseTPUEN = courseTPinfo[\"trainingProvider\"][\"uen\"]\r\ncourseRefNumber = courseTPinfo[\"courseReferenceNumber\"]\r\ncourseAdminEmail = courseRuninfo[0][\"courseAdminEmail\"]\r\n\r\ndef load_json_config():\r\n    # Open the json file where the \"config info\" is being stored\r\n    with open(\"config.json\") as a:\r\n        # Load the json file data into local variable \"data\"\r\n        data1 = json.load(a)\r\n        return data1\r\n\r\n# Open the json file where the \"enrolment info\" is being stored\r\nwith open(\"EnrolmentPayLoad.json\") as b:\r\n    # Load the json file data into local variable \"data\"\r\n    data2 = json.load(b)\r\n# Store the list of data into local variable enrolmentinfo\"\r\ncourseEnrolmentInfo = data2[\"enrolment\"]\r\nenrolmentCourseId = courseEnrolmentInfo[\"course\"][\"run\"][\"id\"]\r\nenrolmentRefNo = courseEnrolmentInfo[\"course\"][\"referenceNumber\"]\r\nenrolmentTpUen = courseEnrolmentInfo[\"trainingPartner\"][\"uen\"]\r\n\r\n# Quit Program\r\ndef quit_program():\r\n    quit()\r\n\r\n\r\nclass APIProject(tk.Tk):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        tk.Tk.__init__(self, *args, *kwargs)\r\n        container = tk.Frame(self)\r\n\r\n        container.pack(side=\"top\", fill=\"both\", expand=True)\r\n\r\n        container.grid_rowconfigure(0, weight=1)\r\n        container.grid_columnconfigure(0, weight=1)\r\n\r\n        self.frames = {}\r\n\r\n        for F in (StartPage, PageOne, PageTwo, PageThree, PageFour, FinalPage):\r\n            frame = F(container, self)\r\n\r\n            self.frames[F] = frame\r\n\r\n            frame.grid(row=0, column=0, sticky=\"nsew\")\r\n\r\n        self.show_frame(StartPage)\r\n\r\n    def show_frame(self, cont):\r\n        frame = self.frames[cont]\r\n        frame.tkraise()\r\n\r\n\r\n# Starting Page (Press to start the Navigation/ Exit)\r\n# 2 options for the user to choose from\r\nclass StartPage(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        load = Image.open(\"SKFMenuPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        button1 = tk.Button(self, text=\"Press to start the Navigation\", bg=\"white\", width=25, pady=5,\r\n                            command=lambda: controller.show_frame(PageOne))  # go to Page One\r\n        button1.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n        button2 = tk.Button(self, text=\"Exit\", bg=\"white\", width=25, pady=5,\r\n                            command=quit_program)  # quit program\r\n        button2.place(relx=0.5, rely=0.7, anchor=CENTER)\r\n\r\n\r\n# Add course run into API\r\nclass PageOne(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n\r\n        #load initialization method from courseRunFunctions.py  \r\n        courseRunInitialization()      \r\n        \r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add a Course Run to the course below: \")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Course Reference Number: \" + courseRefNumber)\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Training Provider UEN: \" + courseTPUEN)\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Course Admin Email: \" + courseAdminEmail)\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n        def AddCourse():  \r\n            try:\r\n                addCourserun()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Course into API. The Course Run ID is \" + str(data1[\"runId\"]))\r\n                print(str(data1[\"runId\"]))\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\", \"Status Code: 400 \\nCourse Run already exist. The Course Run ID is \" + str(data1[\"runId\"]), )\r\n                print(str(data1[\"runId\"]))\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/CourseRunPayLoad.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewCourseRunJsonFile():\r\n                pyjsonviewer.view_data(json_file=\"/Users/Ming/Documents/APIApplication/CourseRunPayLoad.json\")\r\n\r\n        # When button is pressed, function should be called\r\n        AddButton = tk.Button(self, command=AddCourse, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageTwo))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download course run in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewCourseRunJsonButton = tk.Button(self, text=\"View course run in json\", width=18, pady=5, bg=\"white\",\r\n                               command=ViewCourseRunJsonFile)\r\n        ViewCourseRunJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add enrollment into API\r\nclass PageTwo(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Enrolment\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Enrolment Course Run ID: \" + str(enrolmentCourseId))\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Enrolment Reference No: \" + enrolmentRefNo)\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Enrolment TP UEN: \" + enrolmentTpUen)\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddEnrollment():\r\n            try:\r\n                addEnrolment()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Enrolment into API Your Enrolment ID is \" +\r\n                                    (data1[\"enrollRefNum\"]))\r\n                print((data1[\"enrollRefNum\"]))\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nEnrolmentID already exist. The Enrolment ID is \" +\r\n                                     (data1[\"enrollRefNum\"]))\r\n                print((data1[\"enrollRefNum\"]))\r\n\r\n           \r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/EnrolmentPayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewEnrolmentJsonFile():\r\n            pyjsonviewer.view_data(json_file=\"/Users/Ming/Documents/APIApplication/EnrolmentPayload.json\")\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddEnrollment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(PageThree))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Enrolment in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewEnrolmentJsonButton = tk.Button(self, text=\"View Enrolment in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewEnrolmentJsonFile)\r\n        ViewEnrolmentJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add attendance into API\r\nclass PageThree(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Attendance\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Attendance Course Run ID: \")\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Attendance Reference No: \" )\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Attendance TP UEN: \" )\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddAttendance():\r\n            try:\r\n                uploadAttendance()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Attendance into API Your Enrolment ID is \")\r\n                (data1[\"attendance\"])\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nAttendance ID already exist. The Attendance ID is \")\r\n                (data1[\"attendance\"])\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/AttendancePayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewAttendanceJsonFile():\r\n            pyjsonviewer.view_data(json_file=\"/Users/Ming/Documents/APIApplication/AttendancePayload.json\")\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddAttendance, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(PageFour))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Attendance in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewAttendanceJsonButton = tk.Button(self, text=\"View Attendance in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewAttendanceJsonFile)\r\n        ViewAttendanceJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add assessment into API\r\nclass PageFour(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Assessment\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Assessment Course Run ID: \")\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Assessment Reference No: \" )\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Assessment TP UEN: \" )\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddAssessment():\r\n            try:\r\n                addAssessment()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Assessment into API Your Enrolment ID is \")\r\n                #(data1[\"asses      sment\"])\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nAssessment already exist. The Assessment ID is \")\r\n                #(data1[\"assessment\"])\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/AssessmentPayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewAssessmentJsonFile():\r\n            pyjsonviewer.view_data(json_file=\"/Users/Ming/Documents/APIApplication/AssessmentPayload.json\")\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddAssessment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(FinalPage))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Assessment in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewAssessmentJsonButton = tk.Button(self, text=\"View Assessment in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewAssessmentJsonFile)\r\n        ViewAssessmentJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\nclass FinalPage(tk.Frame):\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        load = Image.open(\"SKFFinalPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.5, rely=0.55, anchor=CENTER)\r\n        button1 = tk.Button(self, text=\"Press to Exit App\", bg=\"white\", width=20, pady=5,\r\n                            command=quit_program)  # quit program\r\n        button1.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n\r\napp = APIProject()\r\napp.geometry(\"500x747\")\r\napp.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 0203d41e5f0252289c1ee6acdd294f899b528701)
+++ b/main.py	(date 1623226530736)
@@ -341,7 +341,7 @@
                 addAssessment()
                 data1 = load_json_config()
                 messagebox.showinfo("Successful", "Status Code: 200 \nAdded Assessment into API Your Enrolment ID is ")
-                #(data1["asses      sment"])
+                #(data1["assessment"])
             except:
                 data1 = load_json_config()
                 messagebox.showerror("Invalid Response",
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"334dd218-34f3-4180-b43b-f82e69c63fb1\" name=\"Default Changelist\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/AttendanceFunction.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/AttendanceFunction.py\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/CourseRunPayLoad.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/CourseRunPayLoad.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/EnrolmentPayLoad.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/EnrolmentPayLoad.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/config.json\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/config.json\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/main.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"1tODss4tIl7gVtpmijq9oc5zv8L\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$USER_HOME$/PycharmProjects/APITest\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"restartRequiresConfirmation\" value=\"false\" />\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Python.main\">\r\n    <configuration name=\"AssessmentFunction\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/AssessmentFunction.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"AttendanceFunction\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/AttendanceFunction.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"EnrolmentFunction\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/EnrolmentFunction.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"courseRunFunctions\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/courseRunFunctions.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"APIApplication\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.main\" />\r\n        <item itemvalue=\"Python.AssessmentFunction\" />\r\n        <item itemvalue=\"Python.AttendanceFunction\" />\r\n        <item itemvalue=\"Python.EnrolmentFunction\" />\r\n        <item itemvalue=\"Python.courseRunFunctions\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"SvnConfiguration\">\r\n    <configuration />\r\n  </component>\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"334dd218-34f3-4180-b43b-f82e69c63fb1\" name=\"Default Changelist\" comment=\"\" />\r\n      <created>1622631451536</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1622631451536</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Attendance File Added\">\r\n      <created>1623040141269</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623040141269</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Attendance File Added\">\r\n      <created>1623040266809</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1623040266810</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Attendance File Added\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Attendance File Added\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0203d41e5f0252289c1ee6acdd294f899b528701)
+++ b/.idea/workspace.xml	(date 1623286547506)
@@ -19,13 +19,8 @@
     <select />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="334dd218-34f3-4180-b43b-f82e69c63fb1" name="Default Changelist" comment="">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="334dd218-34f3-4180-b43b-f82e69c63fb1" name="Default Changelist" comment="Attendance File Added">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/AttendanceFunction.py" beforeDir="false" afterPath="$PROJECT_DIR$/AttendanceFunction.py" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/CourseRunPayLoad.json" beforeDir="false" afterPath="$PROJECT_DIR$/CourseRunPayLoad.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/EnrolmentPayLoad.json" beforeDir="false" afterPath="$PROJECT_DIR$/EnrolmentPayLoad.json" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/config.json" beforeDir="false" afterPath="$PROJECT_DIR$/config.json" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
