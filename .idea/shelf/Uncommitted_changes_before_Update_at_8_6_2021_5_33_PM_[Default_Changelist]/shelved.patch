Index: config.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"key\": \"WB9YusKNEEwYwpXuv0Bx5yuGzPIhXTBnMevAumwtcQ4=\",\r\n    \"certPath\": \"/Users/Ming/Documents/APIApplication/cert.pem\",\r\n    \"keyPath\": \"/Users/Ming/Documents/APIApplication/key.pem\",\r\n    \"IV\": \"SSGAPIInitVector\",\r\n    \"StatusCode\": 200,\r\n    \"UEN\": \"199900650G\",\r\n    \"CourseRefNum\": \"TGS-2020000697\",\r\n    \"ExtCourseRefNum\": \"TGS-2020000697\",\r\n    \"runId\": 224371,\r\n    \"enrollRefNum\": \"\"\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config.json b/config.json
--- a/config.json	(revision 896a6c1b691fcf48854ba331e8964f16f02f0f79)
+++ b/config.json	(date 1623136033511)
@@ -7,6 +7,6 @@
     "UEN": "199900650G",
     "CourseRefNum": "TGS-2020000697",
     "ExtCourseRefNum": "TGS-2020000697",
-    "runId": 224371,
+    "runId": 224411,
     "enrollRefNum": ""
 }
\ No newline at end of file
Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Import course Run py Functions\r\nfrom EnrolmentFunction import addEnrolment, enrollmentInitialization\r\nfrom courseRunFunctions import *\r\n\r\nimport tkinter as tk\r\nfrom tkinter import *\r\nfrom tkinter import ttk\r\nfrom tkinter import simpledialog\r\nfrom tkinter import messagebox\r\nimport json\r\nimport datetime\r\nfrom PIL import ImageTk, Image\r\nfrom tkinter import filedialog\r\nimport pandas as pd\r\n\r\n# Open the json file where the \"courserun info\" is being stored\r\nwith open(\"CourseRunPayLoad.json\") as f:\r\n    # Load the json file data into local variable \"data\"\r\n    data = json.load(f)\r\n# Store the list of data into local variable \"courseTPinfo & courseRuninfo\"\r\ncourseTPinfo = data[\"course\"]\r\ncourseRuninfo = data[\"course\"][\"runs\"]\r\ncourseTPUEN = courseTPinfo[\"trainingProvider\"][\"uen\"]\r\ncourseRefNumber = courseTPinfo[\"courseReferenceNumber\"]\r\ncourseAdminEmail = courseRuninfo[0][\"courseAdminEmail\"]\r\n\r\ndef load_json_config():\r\n    # Open the json file where the \"config info\" is being stored\r\n    with open(\"config.json\") as a:\r\n        # Load the json file data into local variable \"data\"\r\n        data1 = json.load(a)\r\n        return data1\r\n\r\n# Open the json file where the \"enrolment info\" is being stored\r\nwith open(\"EnrolmentPayLoad.json\") as b:\r\n    # Load the json file data into local variable \"data\"\r\n    data2 = json.load(b)\r\n# Store the list of data into local variable enrolmentinfo\"\r\ncourseEnrolmentInfo = data2[\"enrolment\"]\r\nenrolmentCourseId = courseEnrolmentInfo[\"course\"][\"run\"][\"id\"]\r\nenrolmentRefNo = courseEnrolmentInfo[\"course\"][\"referenceNumber\"]\r\nenrolmentTpUen = courseEnrolmentInfo[\"trainingPartner\"][\"uen\"]\r\n\r\n# Quit Program\r\ndef quit_program():\r\n    quit()\r\n\r\n\r\nclass APIProject(tk.Tk):\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        tk.Tk.__init__(self, *args, *kwargs)\r\n        container = tk.Frame(self)\r\n\r\n        container.pack(side=\"top\", fill=\"both\", expand=True)\r\n\r\n        container.grid_rowconfigure(0, weight=1)\r\n        container.grid_columnconfigure(0, weight=1)\r\n\r\n        self.frames = {}\r\n\r\n        for F in (StartPage, PageOne, PageTwo, PageThree, PageFour, FinalPage):\r\n            frame = F(container, self)\r\n\r\n            self.frames[F] = frame\r\n\r\n            frame.grid(row=0, column=0, sticky=\"nsew\")\r\n\r\n        self.show_frame(StartPage)\r\n\r\n    def show_frame(self, cont):\r\n        frame = self.frames[cont]\r\n        frame.tkraise()\r\n\r\n\r\n# Starting Page (Press to start the Navigation/ Exit)\r\n# 2 options for the user to choose from\r\nclass StartPage(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        load = Image.open(\"SKFMenuPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        button1 = tk.Button(self, text=\"Press to start the Navigation\", bg=\"white\", width=25, pady=5,\r\n                            command=lambda: controller.show_frame(PageOne))  # go to Page One\r\n        button1.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n        button2 = tk.Button(self, text=\"Exit\", bg=\"white\", width=25, pady=5,\r\n                            command=quit_program)  # quit program\r\n        button2.place(relx=0.5, rely=0.7, anchor=CENTER)\r\n\r\n\r\n# Add course run into API\r\nclass PageOne(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n\r\n        #load initialization method from courseRunFunctions.py  \r\n        courseRunInitialization()      \r\n        \r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add a Course Run to the course below: \")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Course Reference Number: \" + courseRefNumber)\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Training Provider UEN: \" + courseTPUEN)\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Course Admin Email: \" + courseAdminEmail)\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n        def AddCourse():  \r\n            try:\r\n                addCourserun()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Course into API. The Course Run ID is \" + str(data1[\"runId\"]))\r\n                print(str(data1[\"runId\"]))\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\", \"Status Code: 400 \\nCourse Run already exist. The Course Run ID is \" + str(data1[\"runId\"]), )\r\n                print(str(data1[\"runId\"]))\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/CourseRunPayLoad.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewCourseRunJsonFile():\r\n            json_filename = 'CourseRunPayLoad.json'\r\n            Interface = Tk()\r\n\r\n            with open(json_filename, 'r') as inside:\r\n                data = json.load(inside)\r\n\r\n            text = Text(Interface, state='normal', height=20, width=50)\r\n            text.place(x=20, y=40)\r\n            text.insert('1.0', str(data))\r\n\r\n            Interface.geometry(\"450x200\")\r\n\r\n            Interface.mainloop()\r\n\r\n        # When button is pressed, function should be called\r\n        AddButton = tk.Button(self, command=AddCourse, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\", command=lambda: controller.show_frame(PageTwo))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download course run in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewCourseRunJsonButton = tk.Button(self, text=\"View course run in json\", width=18, pady=5, bg=\"white\",\r\n                               command=ViewCourseRunJsonFile)\r\n        ViewCourseRunJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add enrollment into API\r\nclass PageTwo(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Enrolment\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Enrolment Course Run ID: \" + str(enrolmentCourseId))\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Enrolment Reference No: \" + enrolmentRefNo)\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Enrolment TP UEN: \" + enrolmentTpUen)\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddEnrollment():\r\n            try:\r\n                addEnrolment()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Enrolment into API Your Enrolment ID is \" +\r\n                                    (data1[\"enrollRefNum\"]))\r\n                print((data1[\"enrollRefNum\"]))\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nEnrolmentID already exist. The Enrolment ID is \" +\r\n                                     (data1[\"enrollRefNum\"]))\r\n                print((data1[\"enrollRefNum\"]))\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/EnrolmentPayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewEnrolmentJsonFile():\r\n            json_filename = 'EnrolmentPayLoad.json'\r\n            Interface = Tk()\r\n\r\n            with open(json_filename, 'r') as inside:\r\n                data = json.load(inside)\r\n\r\n            text = Text(Interface, state='normal', height=20, width=50)\r\n            text.place(x=20, y=40)\r\n            text.insert('1.0', str(data))\r\n\r\n            Interface.geometry(\"450x200\")\r\n\r\n            Interface.mainloop()\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddEnrollment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(PageThree))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Enrolment in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewEnrolmentJsonButton = tk.Button(self, text=\"View Enrolment in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewEnrolmentJsonFile)\r\n        ViewEnrolmentJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add attendance into API\r\nclass PageThree(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Attendance\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Attendance Course Run ID: \")\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Attendance Reference No: \" )\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Attendance TP UEN: \" )\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddAttendance():\r\n            try:\r\n                #addAttendance()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Attendance into API Your Enrolment ID is \")\r\n                #(data1[\"attendance\"])\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nAttendance ID already exist. The Attendance ID is \")\r\n                #(data1[\"attendance\"])\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/AttendancePayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewAttendanceJsonFile():\r\n            json_filename = 'AttendancePayLoad.json'\r\n            Interface = Tk()\r\n\r\n            with open(json_filename, 'r') as inside:\r\n                data = json.load(inside)\r\n\r\n            text = Text(Interface, state='normal', height=20, width=50)\r\n            text.place(x=20, y=40)\r\n            text.insert('1.0', str(data))\r\n\r\n            Interface.geometry(\"450x200\")\r\n\r\n            Interface.mainloop()\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddAttendance, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(PageFour))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Attendance in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewAttendanceJsonButton = tk.Button(self, text=\"View Attendance in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewAttendanceJsonFile)\r\n        ViewAttendanceJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\n\r\n# Add assessment into API\r\nclass PageFour(tk.Frame):\r\n\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        self.inner = tk.Frame(self)\r\n        self.inner.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n\r\n        load = Image.open(\"SKFBGPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        label1 = tk.Label(self, text=\"You are about to add an Assessment\")\r\n        label1.place(relx=0.5, rely=0.15, anchor=CENTER)\r\n        label2 = tk.Label(self, text=\"Assessment Course Run ID: \")\r\n        label2.place(relx=0.5, rely=0.2, anchor=CENTER)\r\n        label3 = tk.Label(self, text=\"Assessment Reference No: \" )\r\n        label3.place(relx=0.5, rely=0.25, anchor=CENTER)\r\n        label4 = tk.Label(self, text=\"Assessment TP UEN: \" )\r\n        label4.place(relx=0.5, rely=0.3, anchor=CENTER)\r\n\r\n\r\n        def AddAssessment():\r\n            try:\r\n                #addAssessment()\r\n                data1 = load_json_config()\r\n                messagebox.showinfo(\"Successful\", \"Status Code: 200 \\nAdded Assessment into API Your Enrolment ID is \")\r\n                #(data1[\"assessment\"])\r\n            except:\r\n                data1 = load_json_config()\r\n                messagebox.showerror(\"Invalid Response\",\r\n                                         \"Status Code: 400 \\nAssessment already exist. The Assessment ID is \")\r\n                #(data1[\"assessment\"])\r\n\r\n        def DownloadFile():\r\n            try:\r\n                df = pd.read_json('/Users/Ming/Documents/APIApplication/AssessmentPayload.json')\r\n                df.to_csv(filedialog.asksaveasfilename(defaultextension='.csv'))\r\n                messagebox.showinfo(\"Successful\", \"CSV file has been downloaded\")\r\n            except:\r\n                print(\"user didnt save.\")\r\n\r\n        def ViewAssessmentJsonFile():\r\n            json_filename = 'AssessmentPayLoad.json'\r\n            Interface = Tk()\r\n\r\n            with open(json_filename, 'r') as inside:\r\n                data = json.load(inside)\r\n\r\n            text = Text(Interface, state='normal', height=20, width=50)\r\n            text.place(x=20, y=40)\r\n            text.insert('1.0', str(data))\r\n\r\n            Interface.geometry(\"450x200\")\r\n\r\n            Interface.mainloop()\r\n\r\n            # When button is pressed, function should be called\r\n\r\n        AddButton = tk.Button(self, command=AddAssessment, text='Add', width=10, pady=5, bg=\"white\")\r\n        AddButton.place(relx=0.5, rely=0.5, anchor=CENTER)\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.3, rely=0.5, anchor=CENTER)\r\n        NextButton = tk.Button(self, text=\"Next\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(FinalPage))\r\n        NextButton.place(relx=0.7, rely=0.5, anchor=CENTER)\r\n        ViewButton = tk.Button(self, text=\"Download Assessment in CSV\", width=22, pady=5, bg=\"white\",\r\n                               command=DownloadFile)\r\n        ViewButton.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n        ViewAssessmentJsonButton = tk.Button(self, text=\"View Assessment in json\", width=18, pady=5, bg=\"white\",\r\n                                            command=ViewAssessmentJsonFile)\r\n        ViewAssessmentJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)\r\n\r\nclass FinalPage(tk.Frame):\r\n    def __init__(self, parent, controller):\r\n        tk.Frame.__init__(self, parent)\r\n\r\n        load = Image.open(\"SKFFinalPage.JPG\")\r\n        render = ImageTk.PhotoImage(load)\r\n\r\n        # labels can be text or images\r\n        img2 = Label(self, image=render)\r\n        img2.image = render\r\n        img2.place(x=0, y=0, relwidth=1, relheight=1)\r\n\r\n        BackButton = tk.Button(self, text=\"Back\", width=10, pady=5, bg=\"white\",\r\n                               command=lambda: controller.show_frame(StartPage))\r\n        BackButton.place(relx=0.5, rely=0.55, anchor=CENTER)\r\n        button1 = tk.Button(self, text=\"Press to Exit App\", bg=\"white\", width=20, pady=5,\r\n                            command=quit_program)  # quit program\r\n        button1.place(relx=0.5, rely=0.6, anchor=CENTER)\r\n\r\napp = APIProject()\r\napp.geometry(\"500x747\")\r\napp.mainloop()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 896a6c1b691fcf48854ba331e8964f16f02f0f79)
+++ b/main.py	(date 1623131822539)
@@ -174,6 +174,8 @@
         ViewCourseRunJsonButton = tk.Button(self, text="View course run in json", width=18, pady=5, bg="white",
                                command=ViewCourseRunJsonFile)
         ViewCourseRunJsonButton.place(relx=0.5, rely=0.65, anchor=CENTER)
+        RefreshButton = tk.Button(self, command=load_json_config, text='Refresh', width=10, pady=5, bg="white")
+        RefreshButton.place(relx=0.5, rely=0.8, anchor=CENTER)
 
 
 # Add enrollment into API
Index: EnrolmentPayLoad.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"enrolment\": {\r\n        \"course\": {\r\n            \"run\": {\r\n                \"id\": 224368\r\n            },\r\n            \"referenceNumber\": \"TGS-2020000697\"\r\n        },\r\n        \"trainee\": {\r\n            \"id\": \"S8195288D\",\r\n            \"fees\": {\r\n                \"discountAmount\": 50.25,\r\n                \"collectionStatus\": \"Full Payment\"\r\n            },\r\n            \"idType\": {\r\n                \"type\": \"NRIC\"\r\n            },\r\n            \"employer\": {\r\n                \"uen\": \"199900650G\",\r\n                \"contact\": {\r\n                    \"fullName\": \"Stephen Chua\",\r\n                    \"emailAddress\": \"abc@abc.com\",\r\n                    \"contactNumber\": {\r\n                        \"areaCode\": \"\",\r\n                        \"countryCode\": \"65\",\r\n                        \"phoneNumber\": \"88881234\"\r\n                    }\r\n                }\r\n            },\r\n            \"fullName\": \"Aileen Chong\",\r\n            \"dateOfBirth\": \"1981-01-10\",\r\n            \"emailAddress\": \"abc@abc.com\",\r\n            \"contactNumber\": {\r\n                \"areaCode\": \"\",\r\n                \"countryCode\": \"65\",\r\n                \"phoneNumber\": \"88881234\"\r\n            },\r\n            \"enrolmentDate\": \"2021-07-15\",\r\n            \"sponsorshipType\": \"EMPLOYER\"\r\n        },\r\n        \"trainingPartner\": {\r\n            \"uen\": \"199900650G\",\r\n            \"code\": \"199900650G-01\"\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/EnrolmentPayLoad.json b/EnrolmentPayLoad.json
--- a/EnrolmentPayLoad.json	(revision 896a6c1b691fcf48854ba331e8964f16f02f0f79)
+++ b/EnrolmentPayLoad.json	(date 1623136001259)
@@ -2,7 +2,7 @@
     "enrolment": {
         "course": {
             "run": {
-                "id": 224368
+                "id": 224398
             },
             "referenceNumber": "TGS-2020000697"
         },
